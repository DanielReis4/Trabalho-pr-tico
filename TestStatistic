/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pp_er.Teste;

import interfaces.controller.ITestStatistics;
import interfaces.models.IQuestion;

/**
 *
 * @author Asus
 */
public class TestStatistics implements ITestStatistics{
    private IQuestion[] questions;

    public TestStatistics(IQuestion[] questions) {
        this.questions = questions;
    }

    public TestStatistics() {
    }
    
   
    @Override
    public double meanTimePerAnswer(){
        double tempo = 0;
        for (IQuestion q : this.questions){
            tempo = q.getQuestion_metadata().getTimestamp_finish() - q.getQuestion_metadata().getTimestamp_start();
        }
        return tempo/this.questions.length;
    }
    
    @Override
    public double standardDeviationTimePerAnsewer(){
        double mediaTempo = meanTimePerAnswer();
        double sum = 0;
        int i = 0;
        
        while (i<this.questions.length){
            sum += Math.pow((questions[i].getQuestion_metadata().getTimestamp_finish()-questions[i].getQuestion_metadata().getTimestamp_start())- mediaTempo,2);
        }
        
        return Math.sqrt(sum/this.questions.length -1);
        
    }
    
    @Override
    public double correctAnswerPecentage(){
        return (double)correctAnswer()/(double)this.questions.length * 100;
       
    }
   
    @Override
    public double incorrectAnswerPecentage(){
        return (double)incorrectAnswer()/(double)this.questions.length * 100;
       
    }
   
    @Override
    public int correctAnswer(){
        return correctAnswers().length;
       
    }
   
    @Override
    public int incorrectAnswer(){
        return incorrectAnswers().length;
       
   }
   
    @Override
    public IQuestion[] incorrectAnswers(){
        
        IQuestion [] Q = new IQuestion[0];
        int i =0;
        while(i< this.questions.length && questions[i]!= null && !questions[i].evaluateAnswer()){
            Q = new IQuestion[ Q.length + 1];
            Q[ Q.length - 1 ] = this.questions[i]; 
            i++;
        }
    return Q;
    }
   
    @Override
    public IQuestion[] correctAnswers(){
         
        IQuestion [] Q = new IQuestion[0];
        int i =0;
        while(i< this.questions.length && questions[i]!= null && questions[i].evaluateAnswer()){
            Q = new IQuestion[ Q.length + 1];
            Q[ Q.length - 1 ] = this.questions[i]; 
            i++;
        }
    return Q;
    }
          
}
    
   

